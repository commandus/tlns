#ifndef REGIONAL_PARAMETERS_AUTOGEN_H
#define REGIONAL_PARAMETERS_AUTOGEN_H

/**
 *
 * Autogenerated file. Do not modify.
 *
 * Generated by:
 *      ./regional-parameters2cpp regional-parameters.json 
 * on 2025-05-09T09:47:59+0900
 *
 */

#include "lorawan/regional-parameters/regional-parameter-channel-plan-mem.h"

RegionalParameterChannelPlanMem regionalParameterChannelPlanMem(
	{
		// file regional-parameters.json
		{
			1, // id
			"EU863-870", // name
			"EU868", // cn 
			16.00f, // maxUplinkEIRP
			14, // defaultDownlinkTXPower
			869525000, // pingSlotFrequency
			false, // implementsTXParamSetup
			false, // defaultRegion
			true, // supportsExtraChannels
			BandDefaults({ // bandDefaults
				869525000, // RX2Frequency
				0, // RX2DataRate
				1, // ReceiveDelay1
				2, // ReceiveDelay2
				5, // JoinAcceptDelay1
				6 // JoinAcceptDelay2
			}),
			{ // dataRates
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 12, // spreadingFactor
					250 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 11, // spreadingFactor
					440 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 10, // spreadingFactor
					980 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 9, // spreadingFactor
					1760 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					3125 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					5470 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 8, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					11000 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 32, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 0, // spreadingFactor
					50000 // bps
				})
			},
			{ // maxPayloadSizePerDataRate
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				})
			},
			{ // maxPayloadSizePerDataRateRepeater
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					222 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				})
			},
			// rx1DataRateOffsets
			{{0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0}, {2, 1, 0, 0, 0, 0}, {3, 2, 1, 0, 0, 0}, {4, 3, 2, 1, 0, 0}, {5, 4, 3, 2, 1, 0}, {6, 5, 4, 3, 2, 1}, {7, 6, 5, 4, 3, 2}},
			// txPowerOffsets
			{0, -2, -4, -6, -8, -10, -12, -14},
			// uplinkChannels
			{
				Channel({
					869100000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869300000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			},
			{ // downlinkChannels
				Channel({
					868100000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869300000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			}
		},
		{
			3, // id
			"CN779-787", // name
			"CN779", // cn 
			12.00f, // maxUplinkEIRP
			14, // defaultDownlinkTXPower
			785000000, // pingSlotFrequency
			false, // implementsTXParamSetup
			false, // defaultRegion
			true, // supportsExtraChannels
			BandDefaults({ // bandDefaults
				786000000, // RX2Frequency
				0, // RX2DataRate
				1, // ReceiveDelay1
				2, // ReceiveDelay2
				5, // JoinAcceptDelay1
				6 // JoinAcceptDelay2
			}),
			{ // dataRates
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 12, // spreadingFactor
					250 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 11, // spreadingFactor
					440 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 10, // spreadingFactor
					980 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 9, // spreadingFactor
					1760 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					3125 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					5470 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 8, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					11000 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 32, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 0, // spreadingFactor
					50000 // bps
				})
			},
			{ // maxPayloadSizePerDataRate
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				})
			},
			{ // maxPayloadSizePerDataRateRepeater
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				})
			},
			// rx1DataRateOffsets
			{{0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0}, {2, 1, 0, 0, 0, 0}, {3, 2, 1, 0, 0, 0}, {4, 3, 2, 1, 0, 0}, {5, 4, 3, 2, 1, 0}, {6, 5, 4, 3, 2, 1}, {7, 6, 5, 4, 3, 2}},
			// txPowerOffsets
			{0, -2, -4, -6, -8, -10, -12, -14},
			// uplinkChannels
			{
				Channel({
					779500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					779700000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					779900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			},
			{ // downlinkChannels
				Channel({
					779500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					779700000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					779900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			}
		},
		{
			4, // id
			"EU443", // name
			"EU433", // cn 
			12.15f, // maxUplinkEIRP
			10, // defaultDownlinkTXPower
			434665000, // pingSlotFrequency
			false, // implementsTXParamSetup
			false, // defaultRegion
			true, // supportsExtraChannels
			BandDefaults({ // bandDefaults
				434665000, // RX2Frequency
				0, // RX2DataRate
				1, // ReceiveDelay1
				2, // ReceiveDelay2
				5, // JoinAcceptDelay1
				6 // JoinAcceptDelay2
			}),
			{ // dataRates
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 12, // spreadingFactor
					250 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 11, // spreadingFactor
					440 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 10, // spreadingFactor
					980 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 9, // spreadingFactor
					1760 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					3125 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					5470 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 8, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					11000 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 32, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 0, // spreadingFactor
					50000 // bps
				})
			},
			{ // maxPayloadSizePerDataRate
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				})
			},
			{ // maxPayloadSizePerDataRateRepeater
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				})
			},
			// rx1DataRateOffsets
			{{0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0}, {2, 1, 0, 0, 0, 0}, {3, 2, 1, 0, 0, 0}, {4, 3, 2, 1, 0, 0}, {5, 4, 3, 2, 1, 0}, {6, 5, 5, 4, 3, 2}, {7, 6, 5, 4, 3, 2}},
			// txPowerOffsets
			{0, -2, -4, -6, -8, -10},
			// uplinkChannels
			{
				Channel({
					433175000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					433375000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					433575000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			},
			{ // downlinkChannels
				Channel({
					433175000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					433375000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					433575000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			}
		},
		{
			5, // id
			"AU915-928", // name
			"AU915", // cn 
			30.00f, // maxUplinkEIRP
			30, // defaultDownlinkTXPower
			923300000, // pingSlotFrequency
			false, // implementsTXParamSetup
			true, // defaultRegion
			true, // supportsExtraChannels
			BandDefaults({ // bandDefaults
				923300000, // RX2Frequency
				0, // RX2DataRate
				1, // ReceiveDelay1
				2, // ReceiveDelay2
				5, // JoinAcceptDelay1
				6 // JoinAcceptDelay2
			}),
			{ // dataRates
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 12, // spreadingFactor
					250 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 11, // spreadingFactor
					440 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 10, // spreadingFactor
					980 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 9, // spreadingFactor
					1760 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					3125 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					5470 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 9, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					12500 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 32, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 0, // spreadingFactor
					162 // bps
				})
			},
			{ // maxPayloadSizePerDataRate
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					58, // m
					50 // n
				})
			},
			{ // maxPayloadSizePerDataRateRepeater
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					58, // m
					50 // n
				})
			},
			// rx1DataRateOffsets
			{{8, 8, 8, 8, 8, 8}, {9, 8, 8, 8, 8, 8}, {10, 9, 8, 8, 8, 8}, {11, 10, 9, 8, 8, 8}, {12, 11, 10, 9, 8, 8}, {13, 12, 11, 10, 9, 8}, {13, 13, 12, 11, 10, 9}, {9, 8, 8, 8, 8, 8}},
			// txPowerOffsets
			{0, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28},
			// uplinkChannels
			{
				Channel({
					915200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					915400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					915600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					915800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					916000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					916200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					916400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					916600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					916800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					918000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					918200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					918400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					918600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					918800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					921000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					921200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					921400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					921600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					921800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927000000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927200000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927400000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927600000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927800000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					915900000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					917500000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					919100000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					920700000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					922300000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923900000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925500000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927100000, // frequency
					6, // minDR
					7, // maxDR
					true, // enabled
					false // custom
				})
			},
			{ // downlinkChannels
				Channel({
					923300000, // frequency
					8, // minDR
					13, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					923900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					924500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925100000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					925700000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926300000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					926900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					927500000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			}
		},
		{
			12, // id
			"RU864-870", // name
			"RU864", // cn 
			16.00f, // maxUplinkEIRP
			14, // defaultDownlinkTXPower
			868900000, // pingSlotFrequency
			false, // implementsTXParamSetup
			true, // defaultRegion
			true, // supportsExtraChannels
			BandDefaults({ // bandDefaults
				869100000, // RX2Frequency
				0, // RX2DataRate
				1, // ReceiveDelay1
				2, // ReceiveDelay2
				5, // JoinAcceptDelay1
				6 // JoinAcceptDelay2
			}),
			{ // dataRates
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 12, // spreadingFactor
					250 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 11, // spreadingFactor
					440 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 10, // spreadingFactor
					980 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 9, // spreadingFactor
					1760 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 8, // spreadingFactor
					3125 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					5470 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 16, // modulation
					(BANDWIDTH) 8, // bandwidth
					(SPREADING_FACTOR) 7, // spreadingFactor
					11000 // bps
				}),
				DataRate({
					true, // uplink
					true, // downlink
					(MODULATION) 32, // modulation
					(BANDWIDTH) 7, // bandwidth
					(SPREADING_FACTOR) 0, // spreadingFactor
					50000 // bps
				})
			},
			{ // maxPayloadSizePerDataRate
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				}),
				MaxPayloadSize({
					250, // m
					242 // n
				})
			},
			{ // maxPayloadSizePerDataRateRepeater
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					59, // m
					51 // n
				}),
				MaxPayloadSize({
					123, // m
					115 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				}),
				MaxPayloadSize({
					230, // m
					222 // n
				})
			},
			// rx1DataRateOffsets
			{{0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0}, {2, 1, 0, 0, 0, 0}, {3, 2, 1, 0, 0, 0}, {4, 3, 2, 1, 0, 0}, {5, 4, 3, 2, 1, 0}, {6, 5, 4, 3, 2, 1}, {7, 6, 5, 4, 3, 2}},
			// txPowerOffsets
			{0, -2, -4, -6, -8, -10, -12, -14},
			// uplinkChannels
			{
				Channel({
					868900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869100000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			},
			{ // downlinkChannels
				Channel({
					868900000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				}),
				Channel({
					869100000, // frequency
					0, // minDR
					5, // maxDR
					true, // enabled
					false // custom
				})
			}
		}
	}
);
#endif
